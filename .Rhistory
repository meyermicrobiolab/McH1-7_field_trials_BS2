p1 <- p1 + facet_grid(~fraction)+
geom_point(size=3)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=12))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=12))+
scale_color_manual(values=cols)+
facet_grid(~samples$fraction)
p1 +coord_fixed()
dev.off()
pdf("PCA.pdf",bg ="white",width=8.5, height=4)
p<-ggplot(df_out,aes(x=PC1,y=PC2,fill=samples$type,shape=samples$fraction))
p<-p+geom_point(size=3)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=12))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=12))+
scale_shape_manual(values=c(21,22))+
scale_fill_manual(values=cols)+
guides(fill = guide_legend(override.aes=list(shape=21)))+
facet_grid(~samples$fraction)
p + labs(x=xlab, y=ylab, fill="Type",shape="Fraction") +coord_fixed()
dev.off()
library(devtools)
devtools::install_github('ggloor/CoDaSeq/CoDaSeq')
Sys.getenv("GITHUB_PAT")
gc()
detach("package:base", unload = TRUE)
install.packages(c("backports", "broom", "cachem", "cli", "crayon", "digest", "downlit", "evaluate", "foreign", "gert", "highr", "httr2", "knitr", "lme4", "MASS", "minqa", "nlme", "nloptr", "openssl", "pbkrtest", "pkgdown", "pkgload", "ps", "quantreg", "Rcpp", "RcppArmadillo", "RcppParallel", "rlang", "rmarkdown", "roxygen2", "SparseM", "survival", "textshaping", "tinytex", "vegan", "xfun", "yaml", "zCompositions"))
library(devtools)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
knitr::opts_chunk$set(echo = TRUE)
library(dada2)
library(ggplot2)
library(phyloseq)
library(vegan)
library(pairwiseAdonis) # install from github using devtools
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS"=TRUE)
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
Sys.getenv("GITHUB_PAT")
Sys.unsetenv("GITHUB_PAT")
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
Sys.setenv(GITHUB_PAT = "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")
install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(dada2)
library(ggplot2)
library(phyloseq)
library(vegan)
library(pairwiseAdonis) # install from github using devtools
library(knitr)
library(CoDaSeq)
library(dplyr)
library(plyr)
library(cowplot)
library(randomcoloR)
library(reshape2)
library(corncob)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
setwd("/Users/juliemeyer/Documents/McH1-7_field_trials_BS2")
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
# load in data and create phyloseq object
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps #756 taxa and 194 samples
# get samples that have paired sample types (HD/DD) and multiple time points
ps2 = subset_samples(ps, Complete_sets == "yes")
ps2 #756 taxa and 125 samples
ps2 <- prune_taxa(taxa_sums(ps2) > 1, ps2)
ps2 #736 taxa and 125 samples, removed 20 taxa only found in HH samples
ps_ra<-transform_sample_counts(ps2, function(OTU) OTU/sum(OTU))
ps_ra #736 taxa and 125 samples
get_taxa_unique(ps_ra, "Class") #45
get_taxa_unique(ps_ra, "Order") #96
get_taxa_unique(ps_ra, "Family") #174
get_taxa_unique(ps_ra, "Genus") #314
# Get most prevalent taxa
ps20<-prune_taxa(names(sort(taxa_sums(ps_ra),TRUE)[1:20]), ps_ra)
ps20 #20 taxa and 125 samples
get_taxa_unique(ps20, "Genus") #13
# Export phyloseq object as spreadsheets for plotting
otu_20 = as(otu_table(ps20), "matrix")
taxon_20 = as(tax_table(ps20), "matrix")
metadata_20 = as(sample_data(ps20), "matrix")
write.table(otu_20,"silva_nochloronomito_otu_table_ps20.txt",sep="\t",col.names=NA)
write.table(taxon_20,"silva_nochloronomito_taxa_table_ps20.txt",sep="\t",col.names=NA)
write.table(metadata_20,"metadata_ps20.txt",sep="\t",col.names=NA)
# read in otu table with graph-appropriate ASV names, sorted ASVs in excel by taxonomic Class (top to bottom on graph = right to left columns)
asv <- read.table("silva_nochloronomito_otu_table_ps20_v4.txt",sep="\t",header=TRUE, row.names=1)
# make sample names a column
asv <- tibble::rownames_to_column(asv, "sample")
asv_long<-melt(asv, id.vars=c("sample"))
names(asv_long)[names(asv_long)=="variable"] <- "ASV"
names(asv_long)[names(asv_long)=="value"] <- "relative_abundance"
meta<-read.table("metadata_ps20.txt",sep="\t",header=T,row.names=1)
# make sample names a column
meta <- tibble::rownames_to_column(meta, "sample")
#merge asv table and metadata
asv_meta <- merge(asv_long,meta, "sample")
write.table(asv_meta,"asv_meta.txt",sep="\t",col.names=NA)
#### read in data for plot
asv_meta<-read.table("asv_meta.txt",sep="\t",header=T,row.names=1)
#set the plot aesthetics
cols<-c("none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
asv_meta$sampled<-factor(asv_meta$sampled,levels=c("Before treatment","Two weeks after treatment","Two months after treatment"))
asv_meta$Treatment<-factor(asv_meta$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none"))
asv_meta$ASV<-factor(asv_meta$ASV,levels=c("Other","Roseibacillus_ASV1","Enhydrobacter_ASV1","Halomonas_ASV2","Halomonas_ASV1","Endozoicomonas_ASV3","Endozoicomonas_ASV2","Endozoicomonas_ASV1","Vibrio_ASV4","Vibrio_ASV3","Vibrio_ASV2","Vibrio_ASV1","Photobacterium_ASV1","Psychrobium_ASV1","Pseudoalteromonas_ASV2","Pseudoalteromonas_ASV1","Thalassobius_ASV1","Ruegeria_ASV1","Nautella_ASV1","Halodesulfovibrio_ASV1","Renibacterium_ASV1"))
#make bubble plot
bubble <- ggplot(asv_meta, aes(x=sample,y=ASV,size=relative_abundance,color=Treatment))+
geom_point(alpha=0.8)+ # the alpha value is the opacity of the bubble
scale_size(range = c(0,10), name="Relative abundance")+ #adjust the two numbers here to change bubble sizes
facet_grid(Condition ~ sampled, scales="free")+
theme_bw()+
scale_color_manual(values=cols)+
theme(axis.text.x=element_blank())+
theme(axis.text.y=element_text(size=10))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
theme(legend.text = element_text(size=10))
bubble
#I like this plot, but I just want it to arrange the samples on the x-axis by treatment type.
###use dplyr to group by sample date, then arrange by treatment using my custom orders
asv_meta2 <- asv_meta %>% group_by(sampled) %>% arrange(factor(Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none")), .by_group = TRUE)
bubble <- ggplot(asv_meta, aes(x=sample,y=ASV,size=relative_abundance,color=Treatment))+
geom_point(alpha=0.8)+ # the alpha value is the opacity of the bubble
scale_size(range = c(0,10), name="Relative abundance")+ #adjust the two numbers here to change bubble sizes
facet_grid(Condition ~ sampled, scales="free")+
theme_bw()+
scale_color_manual(values=cols)+
theme(axis.text.x=element_blank())+
theme(axis.text.y=element_text(size=10))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
theme(legend.text = element_text(size=10))
bubble
View(meta)
# load in data and create phyloseq object
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps #756 taxa and 194 samples
# get samples that have paired sample types (HD/DD) and multiple time points
ps2 = subset_samples(ps, Complete_sets == "yes")
ps2 #756 taxa and 125 samples
ps2 <- prune_taxa(taxa_sums(ps2) > 1, ps2)
ps2 #736 taxa and 125 samples, removed 20 taxa only found in HH samples
ps_ra<-transform_sample_counts(ps2, function(OTU) OTU/sum(OTU))
ps_ra #736 taxa and 125 samples
get_taxa_unique(ps_ra, "Class") #45
get_taxa_unique(ps_ra, "Order") #96
get_taxa_unique(ps_ra, "Family") #174
get_taxa_unique(ps_ra, "Genus") #314
# Get most prevalent taxa
ps20<-prune_taxa(names(sort(taxa_sums(ps_ra),TRUE)[1:20]), ps_ra)
ps20 #20 taxa and 125 samples
get_taxa_unique(ps20, "Genus") #13
# Export phyloseq object as spreadsheets for plotting
otu_20 = as(otu_table(ps20), "matrix")
taxon_20 = as(tax_table(ps20), "matrix")
metadata_20 = as(sample_data(ps20), "matrix")
write.table(otu_20,"silva_nochloronomito_otu_table_ps20.txt",sep="\t",col.names=NA)
write.table(taxon_20,"silva_nochloronomito_taxa_table_ps20.txt",sep="\t",col.names=NA)
write.table(metadata_20,"metadata_ps20.txt",sep="\t",col.names=NA)
# read in otu table with graph-appropriate ASV names, sorted ASVs in excel by taxonomic Class (top to bottom on graph = right to left columns)
asv <- read.table("silva_nochloronomito_otu_table_ps20_v4.txt",sep="\t",header=TRUE, row.names=1)
# make sample names a column
asv <- tibble::rownames_to_column(asv, "sample")
asv_long<-melt(asv, id.vars=c("sample"))
names(asv_long)[names(asv_long)=="variable"] <- "ASV"
names(asv_long)[names(asv_long)=="value"] <- "relative_abundance"
meta<-read.table("metadata_ps20.txt",sep="\t",header=T,row.names=1)
# make sample names a column
meta <- tibble::rownames_to_column(meta, "sample")
#merge asv table and metadata
asv_meta <- merge(asv_long,meta, "sample")
write.table(asv_meta,"asv_meta.txt",sep="\t",col.names=NA)
#### read in data for plot
asv_meta<-read.table("asv_meta.txt",sep="\t",header=T,row.names=1)
#set the plot aesthetics
cols<-c("none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
asv_meta$sampled<-factor(asv_meta$sampled,levels=c("Before treatment","Two weeks after treatment","Two months after treatment"))
asv_meta$Treatment<-factor(asv_meta$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none"))
asv_meta$ASV<-factor(asv_meta$ASV,levels=c("Other","Roseibacillus_ASV1","Enhydrobacter_ASV1","Halomonas_ASV2","Halomonas_ASV1","Endozoicomonas_ASV3","Endozoicomonas_ASV2","Endozoicomonas_ASV1","Vibrio_ASV4","Vibrio_ASV3","Vibrio_ASV2","Vibrio_ASV1","Photobacterium_ASV1","Psychrobium_ASV1","Pseudoalteromonas_ASV2","Pseudoalteromonas_ASV1","Thalassobius_ASV1","Ruegeria_ASV1","Nautella_ASV1","Halodesulfovibrio_ASV1","Renibacterium_ASV1"))
#make bubble plot
bubble <- ggplot(asv_meta, aes(x=sample,y=ASV,size=relative_abundance,color=Treatment))+
geom_point(alpha=0.8)+ # the alpha value is the opacity of the bubble
scale_size(range = c(0,10), name="Relative abundance")+ #adjust the two numbers here to change bubble sizes
facet_grid(Condition ~ sampled, scales="free")+
theme_bw()+
scale_color_manual(values=cols)+
theme(axis.text.x=element_blank())+
theme(axis.text.y=element_text(size=10))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
theme(legend.text = element_text(size=10))
bubble
#I like this plot, but I just want it to arrange the samples on the x-axis by treatment type.
###use dplyr to group by sample date, then arrange by treatment using my custom orders
#asv_meta2 <- asv_meta %>% group_by(sampled) %>% arrange(factor(Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none")), .by_group = TRUE)
# the order in the table is correct, but it doesn't change what ggplot does
# I think because there are so many different factors here that I need to create subplots and stitch back together with cowplot
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
ps2 = subset_samples(ps, Complete_sets == "yes")
ps2
ps2 <- prune_taxa(taxa_sums(ps2) > 1, ps2)
ps2
ps_ra<-transform_sample_counts(ps2, function(OTU) OTU/sum(OTU))
ps20<-prune_taxa(names(sort(taxa_sums(ps_ra),TRUE)[1:20]), ps_ra)
ps20
get_taxa_unique(ps20, "Genus") #13
otu_20 = as(otu_table(ps20), "matrix")
taxon_20 = as(tax_table(ps20), "matrix")
metadata_20 = as(sample_data(ps20), "matrix")
write.table(otu_20,"silva_nochloronomito_otu_table_ps20.txt",sep="\t",col.names=NA)
write.table(taxon_20,"silva_nochloronomito_taxa_table_ps20.txt",sep="\t",col.names=NA)
write.table(metadata_20,"metadata_ps20.txt",sep="\t",col.names=NA)
asv <- read.table("silva_nochloronomito_otu_table_ps20_v4.txt",sep="\t",header=TRUE, row.names=1)
# make sample names a column
asv <- tibble::rownames_to_column(asv, "sample")
asv_long<-melt(asv, id.vars=c("sample"))
names(asv_long)[names(asv_long)=="variable"] <- "ASV"
names(asv_long)[names(asv_long)=="value"] <- "relative_abundance"
meta<-read.table("metadata_ps20.txt",sep="\t",header=T,row.names=1)
# make sample names a column
meta <- tibble::rownames_to_column(meta, "sample")
asv_meta <- merge(asv_long,meta, "sample")
write.table(asv_meta,"asv_meta.txt",sep="\t",col.names=NA)
asv_meta<-read.table("asv_meta.txt",sep="\t",header=T,row.names=1)
#set the plot aesthetics
cols<-c("none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
asv_meta$sampled<-factor(asv_meta$sampled,levels=c("Before treatment","Two weeks after treatment","Two months after treatment"))
asv_meta$Treatment<-factor(asv_meta$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none"))
asv_meta$ASV<-factor(asv_meta$ASV,levels=c("Other","Roseibacillus_ASV1","Enhydrobacter_ASV1","Halomonas_ASV2","Halomonas_ASV1","Endozoicomonas_ASV3","Endozoicomonas_ASV2","Endozoicomonas_ASV1","Vibrio_ASV4","Vibrio_ASV3","Vibrio_ASV2","Vibrio_ASV1","Photobacterium_ASV1","Psychrobium_ASV1","Pseudoalteromonas_ASV2","Pseudoalteromonas_ASV1","Thalassobius_ASV1","Ruegeria_ASV1","Nautella_ASV1","Halodesulfovibrio_ASV1","Renibacterium_ASV1"))
View(asv_meta)
bubble <- ggplot(asv_meta, aes(x=sample,y=ASV,size=relative_abundance,color=Treatment))+
geom_point(alpha=0.8)+ # the alpha value is the opacity of the bubble
scale_size(range = c(0,10), name="Relative abundance")+ #adjust the two numbers here to change bubble sizes
facet_grid(Condition ~ sampled, scales="free")+
theme_bw()+
scale_color_manual(values=cols)+
theme(axis.text.x=element_blank())+
theme(axis.text.y=element_text(size=10))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
theme(legend.text = element_text(size=10))
bubble
# load in data and create phyloseq object
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps #756 taxa and 194 samples
# get samples that have paired sample types (HD/DD) and multiple time points
ps2 = subset_samples(ps, Complete_sets == "yes")
ps2 #756 taxa and 125 samples
ps2 <- prune_taxa(taxa_sums(ps2) > 1, ps2)
ps2 #736 taxa and 125 samples, removed 20 taxa only found in HH samples
ps_ra<-transform_sample_counts(ps2, function(OTU) OTU/sum(OTU))
ps_ra #736 taxa and 125 samples
get_taxa_unique(ps_ra, "Class") #45
get_taxa_unique(ps_ra, "Order") #96
get_taxa_unique(ps_ra, "Family") #174
get_taxa_unique(ps_ra, "Genus") #314
# Get most prevalent taxa
ps20<-prune_taxa(names(sort(taxa_sums(ps_ra),TRUE)[1:20]), ps_ra)
ps20 #20 taxa and 125 samples
get_taxa_unique(ps20, "Genus") #13
# Export phyloseq object as spreadsheets for plotting
otu_20 = as(otu_table(ps20), "matrix")
taxon_20 = as(tax_table(ps20), "matrix")
metadata_20 = as(sample_data(ps20), "matrix")
write.table(otu_20,"silva_nochloronomito_otu_table_ps20.txt",sep="\t",col.names=NA)
write.table(taxon_20,"silva_nochloronomito_taxa_table_ps20.txt",sep="\t",col.names=NA)
write.table(metadata_20,"metadata_ps20.txt",sep="\t",col.names=NA)
# read in otu table with graph-appropriate ASV names, sorted ASVs in excel by taxonomic Class (top to bottom on graph = right to left columns)
asv <- read.table("silva_nochloronomito_otu_table_ps20_v4.txt",sep="\t",header=TRUE, row.names=1)
# make sample names a column
asv <- tibble::rownames_to_column(asv, "sample")
asv_long<-melt(asv, id.vars=c("sample"))
names(asv_long)[names(asv_long)=="variable"] <- "ASV"
names(asv_long)[names(asv_long)=="value"] <- "relative_abundance"
meta<-read.table("metadata_ps20.txt",sep="\t",header=T,row.names=1)
# make sample names a column
meta <- tibble::rownames_to_column(meta, "sample")
#merge asv table and metadata
asv_meta <- merge(asv_long,meta, "sample")
write.table(asv_meta,"asv_meta.txt",sep="\t",col.names=NA)
#### read in data for plot
asv_meta<-read.table("asv_meta.txt",sep="\t",header=T,row.names=1)
#set the plot aesthetics
cols<-c("none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
asv_meta$sampled<-factor(asv_meta$sampled,levels=c("Before treatment","Two weeks after treatment","Two months after treatment"))
asv_meta$Treatment<-factor(asv_meta$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none"))
asv_meta$ASV<-factor(asv_meta$ASV,levels=c("Other","Roseibacillus_ASV1","Enhydrobacter_ASV1","Halomonas_ASV2","Halomonas_ASV1","Endozoicomonas_ASV3","Endozoicomonas_ASV2","Endozoicomonas_ASV1","Vibrio_ASV4","Vibrio_ASV3","Vibrio_ASV2","Vibrio_ASV1","Photobacterium_ASV1","Psychrobium_ASV1","Pseudoalteromonas_ASV2","Pseudoalteromonas_ASV1","Thalassobius_ASV1","Ruegeria_ASV1","Nautella_ASV1","Halodesulfovibrio_ASV1","Renibacterium_ASV1"))
#make bubble plot
bubble <- ggplot(asv_meta, aes(x=sample,y=ASV,size=relative_abundance,color=Treatment))+
geom_point(alpha=0.8)+ # the alpha value is the opacity of the bubble
scale_size(range = c(0,10), name="Relative abundance")+ #adjust the two numbers here to change bubble sizes
facet_grid(Condition ~ sampled, scales="free")+
theme_bw()+
scale_color_manual(values=cols)+
theme(axis.text.x=element_blank())+
theme(axis.text.y=element_text(size=10))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
theme(legend.text = element_text(size=10))
bubble
#I like this plot, but I just want it to arrange the samples on the x-axis by treatment type.
###use dplyr to group by sample date, then arrange by treatment using my custom orders
#asv_meta2 <- asv_meta %>% group_by(sampled) %>% arrange(factor(Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none")), .by_group = TRUE)
# the order in the table is correct, but it doesn't change what ggplot does
# I think because there are so many different factors here that I need to create subplots and stitch back together with cowplot
asv_meta<-read.table("asv_meta.txt",sep="\t",header=T,row.names=1)
#set the plot aesthetics
cols<-c("none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
asv_meta$sampled<-factor(asv_meta$sampled,levels=c("Before treatment","Two weeks after treatment","Two months after treatment"))
asv_meta$Treatment<-factor(asv_meta$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none"))
asv_meta$ASV<-factor(asv_meta$ASV,levels=c("Other","Roseibacillus_ASV1","Enhydrobacter_ASV1","Halomonas_ASV2","Halomonas_ASV1","Endozoicomonas_ASV3","Endozoicomonas_ASV2","Endozoicomonas_ASV1","Vibrio_ASV4","Vibrio_ASV3","Vibrio_ASV2","Vibrio_ASV1","Photobacterium_ASV1","Psychrobium_ASV1","Pseudoalteromonas_ASV2","Pseudoalteromonas_ASV1","Thalassobius_ASV1","Ruegeria_ASV1","Nautella_ASV1","Halodesulfovibrio_ASV1","Renibacterium_ASV1"))
#make bubble plot
bubble <- ggplot(asv_meta, aes(x=sample,y=ASV,size=relative_abundance,color=Treatment))+
geom_point(alpha=0.8)+ # the alpha value is the opacity of the bubble
scale_size(range = c(0,10), name="Relative abundance")+ #adjust the two numbers here to change bubble sizes
facet_grid(Condition ~ sampled, scales="free")+
theme_bw()+
scale_color_manual(values=cols)+
theme(axis.text.x=element_blank())+
theme(axis.text.y=element_text(size=10))+
theme(axis.title.x=element_blank())+
theme(axis.title.y=element_blank())+
theme(legend.text = element_text(size=10))
bubble
knitr::opts_chunk$set(echo = TRUE)
vcpA <- read.table("vcpA.txt",sep="\t",header=TRUE)
palette <- c("DD"="#000000","HD"="#999999","HH"="#E69F00")
vcpA$Month <- factor(vcpA$Month, levels=c("August","October","January"))
#label from the bottom up
vcpA$Treatment <- factor(vcpA$Treatment, levels=c("none","control bag","control paste","probiotic bag","probiotic paste"))
pdf("vcpA.pdf",width=8,height=6)
p2<-ggplot(vcpA,aes(Treatment,Copies_vcpA))+
geom_boxplot(outlier.shape=NA)+
geom_jitter(aes(color=HealthState))+
facet_grid(Month~.,space="free")+
theme(axis.title.x=element_blank())+
theme_bw()+
theme(text=element_text(size=14,face="bold"))+
ylab("copies of vcpA per ng DNA")+
scale_color_manual(values=palette)
p2
dev.off()
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2_jan corncob.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2_jan_corncob.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2_jan.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2_jan <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2_jan
set.seed(1)
tissueJan.da <- differentialTest(formula = ~ Proportion_TissueLost_Jan21,
phi.formula = ~ Proportion_TissueLost_Jan21,
formula_null = ~ 1,
phi.formula_null = ~ Proportion_TissueLost_Jan21,
test = "LRT", boot = FALSE,
data = ps5_BS2_jan,
fdr_cutoff = 0.05)
View(samples)
View(sampledata)
set.seed(1)
tissueJan.da <- differentialTest(formula = ~ Proportion_TissueLost_Jan21,
phi.formula = ~ Proportion_TissueLost_Jan21,
formula_null = ~ 1,
phi.formula_null = ~ Proportion_TissueLost_Jan21,
test = "LRT", boot = FALSE,
data = ps5_BS2_jan,
fdr_cutoff = 0.05)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2_jan corncob.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2_jan_corncob.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2_jan.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2_jan <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2_jan
ps_corn = subset_samples(ps, Proportion_TissueLost_Jan21 != "nd")
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2_jan corncob.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2_jan_corncob.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2_jan.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2_jan <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2_jan
ps_corn = subset_samples(ps5_BS2_jan, Proportion_TissueLost_Jan21 != "nd")
ps_corn
ps_corn <- prune_taxa(taxa_sums(ps_corn) > 1, ps_corn) #remove taxa not found in remaining samples
ps_corn
set.seed(1)
tissueJan.da <- differentialTest(formula = ~ Proportion_TissueLost_Jan21,
phi.formula = ~ Proportion_TissueLost_Jan21,
formula_null = ~ 1,
phi.formula_null = ~ Proportion_TissueLost_Jan21,
test = "LRT", boot = FALSE,
data = ps_corn,
fdr_cutoff = 0.05)
View(samples)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2_jan corncob.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2_jan_corncob.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2_jan.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2_jan <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2_jan
ps_corn = subset_samples(ps5_BS2_jan, Proportion_TissueLost_Jan21 != "nd")
ps_corn
ps_corn <- prune_taxa(taxa_sums(ps_corn) > 1, ps_corn) #remove taxa not found in remaining samples
ps_corn
# use an ASV table that has been filtered to remove low-abundance ASVs, no blanks, replaced sequences with ASV numbers in both otu table and taxa table, added a column named "Species" to the taxa table to fill in later with ASV number
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2_jan corncob.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2_jan_corncob.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2_jan.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2_jan <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2_jan
View(samples)
sample_data(ps5_BS2_jan)$Treatment<-factor(sample_data(ps5_BS2_jan)$Treatment,levels=c("none","probiotic bag","probiotic paste","control bag","control paste","resistant"))
set.seed(1)
treatment.da <- differentialTest(formula = ~ Treatment,
phi.formula = ~ Treatment,
formula_null = ~ 1,
phi.formula_null = ~ Treatment,
test = "Wald", boot = FALSE,
data = ps5_BS2_jan,
fdr_cutoff = 0.05)
#quick look at results with corncob's plotting feature
plot(treatment.da)
extractmods <- function(model) {
result <- data.frame("Estimate" = model$coefficients[2, 1],
"Std.Error" = model$coefficients[2, 2],
"p" = model$coefficients[2, 4])
return(result)
}
treatment.da.models <- lapply(treatment.da$significant_models, extractmods)
names(treatment.da.models) <- treatment.da$significant_taxa
tax_table(ps5_BS2_jan)[,7] <- rownames(tax_table(ps5_BS2_jan))
sig.taxonomy.treatment <- as.data.frame(tax_table(ps5_BS2_jan)[treatment.da$significant_taxa,])
treatment.da.models.df <- ldply(treatment.models, data.frame) %>%
left_join(sig.taxonomy.treatment, by = c(".id" = "Species")) %>%
mutate(genusasv = paste0(Genus, "_(", .id,")"))
treatment.da.models.df <- ldply(treatment.da.models, data.frame) %>%
left_join(sig.taxonomy.treatment, by = c(".id" = "Species")) %>%
mutate(genusasv = paste0(Genus, "_(", .id,")"))
### Save these data so you don't have to re-run the model ###
write.table(treatment.da.models.df, "DA_treatment.txt", sep="\t",row.names = FALSE)
View(treatment.da.models.df)
