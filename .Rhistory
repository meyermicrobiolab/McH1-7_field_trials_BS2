length(unique(samples$Treatment)) #6
length(unique(samples$Collection.month)) #3
p<-ggplot(df_out,aes(x=PC1,y=PC2,fill=samples$Treatment,shape=samples$Collection.month))
p<-p+geom_point(size=5)
p
View(df_out)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2 #755 taxa and 194 samples
View(otu)
View(samples)
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
#biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
View(samples)
df_out <- as.data.frame(d.pcx$x)
theme_set(theme_bw()+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()))
cols<-c("resistant"="#000000","none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
samples$Treatment<-factor(samples$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none","resistant"))
samples$Collection.month<-factor(samples$Collection.month,levels=c("Aug","Oct","Jan"))
length(unique(samples$Treatment)) #6
length(unique(samples$Collection.month)) #3
p<-ggplot(df_out,aes(x=PC1,y=PC2,fill=samples$Treatment,shape=samples$Collection.month))
p<-p+geom_point(size=5)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=12))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=12))+
scale_fill_manual(values=cols)+
scale_shape_manual(values=c(21,22,23))+
guides(fill = guide_legend(override.aes=list(shape=21)))
p+labs(x=xlab, y=ylab, fill="Treatment", shape="Month") + coord_fixed()
otu <- read.table("silva_nochloronomito_otu_table_ps5.txt",sep="\t",header=TRUE, row.names=1)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
samples$Treatment<-factor(samples$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none","resistant"))
samples$Collection.month<-factor(samples$Collection.month,levels=c("Aug","Oct","Jan"))
library(dada2)
library(ggplot2)
library(phyloseq)
library(vegan)
library(knitr)
library(ALDEx2)
library(CoDaSeq)
library(dplyr)
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
# use an ASV table that has been filtered to remove low-abundance ASVs, no blanks
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2 #755 taxa and 194 samples
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
#biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
# replot PCA with ggplot2 (showing samples only)
df_out <- as.data.frame(d.pcx$x)
theme_set(theme_bw()+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()))
cols<-c("resistant"="#000000","none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
samples$Treatment<-factor(samples$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none","resistant"))
samples$Collection.month<-factor(samples$Collection.month,levels=c("Aug","Oct","Jan"))
length(unique(samples$Treatment)) #6
length(unique(samples$Collection.month)) #3
#pdf("PCA.pdf",width=8.5)
#p<-ggplot(df_out,aes(x=PC1,y=PC2,fill=samples$Treatment,shape=samples$Collection.month))
#p<-p+geom_point(size=5)+
theme(axis.title = element_text(size=14))+
theme(axis.text=element_text(size=12))+
theme(legend.title = element_text(size=14))+
theme(legend.text = element_text(size=12))+
scale_fill_manual(values=cols)+
scale_shape_manual(values=c(21,22,23))+
guides(fill = guide_legend(override.aes=list(shape=21)))
# use an ASV table that has been filtered to remove low-abundance ASVs, no blanks
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2 #755 taxa and 194 samples
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
#biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
# replot PCA with ggplot2 (showing samples only)
df_out <- as.data.frame(d.pcx$x)
theme_set(theme_bw()+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()))
cols<-c("resistant"="#000000","none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
samples$Treatment<-factor(samples$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none","resistant"))
samples$Collection.month<-factor(samples$Collection.month,levels=c("Aug","Oct","Jan"))
length(unique(samples$Treatment)) #6
length(unique(samples$Collection.month)) #3
####### Use phyloseq/vegan to perform PERMANOVA
# set metadata as factors
type<-as.character(samples$Treatment)
frac<-as.character(samples$Collection.month)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm<-adonis2(dist.clr~Treatment*Collection.month,as(sample_data(ps),"data.frame"))
perm<-adonis2(dist.clr~Treatment*Collection.month,as(sample_data(ps5_BS2),"data.frame"))
perm<-adonis2(dist.clr~Treatment,as(sample_data(ps5_BS2),"data.frame"))
otu <- read.table("silva_nochloronomito_otu_table_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
psBS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
psBS2
# remove taxa not present in BS2
psBS2_test <- prune_taxa(taxa_sums(psBS2) > 1)
# remove taxa not present in BS2
psBS2_test <- prune_taxa(taxa_sums(psBS2) > 1, psBS2)
psBS2_test
ps5_BS2<-filter_taxa(psBS2_test, function(x) mean(x) >5, TRUE)
ntaxa(ps5_BS2) #755
get_taxa_unique(ps5_BS2, "Order") #102
get_taxa_unique(ps5_BS2, "Class") #46
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Export files with low abundance taxa removed
otu_ps5_BS2 = as(otu_table(ps5_BS2), "matrix")
taxon_ps5_BS2 = as(tax_table(ps5_BS2), "matrix")
metadata_ps5_BS2 = as(sample_data(ps5_BS2), "matrix")
write.table(otu_ps5_BS2,"silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",col.names=NA)
write.table(taxon_ps5_BS2,"silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",col.names=NA)
write.table(metadata_ps5_BS2,"metadata_ps5_BS2.txt",sep="\t",col.names=NA)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
#biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
df_out <- as.data.frame(d.pcx$x)
theme_set(theme_bw()+theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()))
cols<-c("resistant"="#000000","none"="#999999","probiotic paste"="#D55E00","probiotic bag"="#E69F00","control paste"="#0072B2","control bag"="#56B4E9")
samples$Treatment<-factor(samples$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none","resistant"))
samples$Collection.month<-factor(samples$Collection.month,levels=c("Aug","Oct","Jan"))
length(unique(samples$Treatment)) #6
length(unique(samples$Collection.month)) #3
type<-as.character(samples$Treatment)
frac<-as.character(samples$Collection.month)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm<-adonis2(dist.clr~Treatment,as(sample_data(ps5_BS2),"data.frame"))
ps5_BS2
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
#biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
type<-as.character(samples$Treatment)
frac<-as.character(samples$Collection.month)
# permanova between groups using Aitchison distance
dist.clr <- dist(E.clr)
perm<-adonis2(dist.clr~Treatment,as(sample_data(ps5_BS2),"data.frame"))
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
samples$Treatment<-factor(samples$Treatment,levels=c("probiotic bag","probiotic paste","control bag","control paste","none","resistant"))
samples$Collection.month<-factor(samples$Collection.month,levels=c("Aug","Oct","Jan"))
ps_ra<-transform_sample_counts(ps, function(OTU) OTU/sum(OTU))
get_taxa_unique(ps_ra, "Class")
get_taxa_unique(ps_ra, "Order") #37
get_taxa_unique(ps_ra, "Family") #53
get_taxa_unique(ps_ra, "Genus") #61
ps_ra
n <- 46
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
library(randomcoloR)
# after plotting, you can re-run the next line to create a different selection of colors
palette <- distinctColorPalette(n)
View(samples)
p1=plot_bar(ps_ra, "colony" ,fill="Class")+
facet_grid(Treatment~Condition,scales="free",space="free")+
geom_bar(aes(fill=Class), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p1=plot_bar(ps_ra, "Coral.tag" ,fill="Class")+
facet_grid(Treatment~Condition,scales="free",space="free")+
geom_bar(aes(fill=Class), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p1=plot_bar(ps_ra, "Coral.tag" ,fill="Class")+
facet_grid(.~Collection.month,scales="free",space="free")+
geom_bar(aes(fill=Class), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
p1=plot_bar(ps_ra ,fill="Class")+
facet_grid(Condition~Collection.month,scales="free",space="free")+
geom_bar(aes(fill=Class), stat="identity",position="stack")+
theme_bw()+
theme(strip.text=element_text(face="bold", size=12))+
theme(axis.text.x=element_text(size=12))+
theme(axis.text.y=element_text(size=12))+
scale_fill_manual(values=palette)+
#theme(axis.title.x = element_blank())+
theme(legend.position = "bottom")
p1
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2
View(samples)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS3.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS3.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS3.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS3 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS3
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
# Perform the center-log-ratio (CLR) transformation
d.clr <- codaSeq.clr(d.czm)
# transpose matrix of CLR transformed data for ordination and dendrogram
E.clr <- t(d.clr)
# plot compositional PCA biplot (perform a singular value decomposition)
d.pcx <- prcomp(E.clr)
# calculate percent variance explained for the axis labels
pc1 <- round(d.pcx$sdev[1]^2/sum(d.pcx$sdev^2),2)
pc2 <- round(d.pcx$sdev[2]^2/sum(d.pcx$sdev^2),2)
xlab <- paste("PC1: ", pc1, sep="")
ylab <- paste("PC2: ", pc2, sep="")
#biplot(d.pcx, cex=c(0.6,0.4), var.axes=F,scale=1, xlab=xlab, ylab=ylab)
summary(d.pcx)
str(d.pcx)
screeplot(d.pcx)
# replot PCA with ggplot2 (showing samples only)
df_out <- as.data.frame(d.pcx$x)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS3.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS3.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS3.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS3 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS3
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
otu <- read.table("silva_nochloronomito_otu_table.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_BS2andBS3.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps
psnb = subset_samples(ps, Coral.tag != "blank")
psnb
psnb <- prune_taxa(taxa_sums(psnb) > 1, psnb)
psnb
psBS2 = subset_samples(psnb, Site == "BS2")
psBS2 #25137 taxa and 194 samples
psBS2 <- prune_taxa(taxa_sums(psBS2) > 1, psBS2)
psBS2
psBS3 = subset_samples(psnb, Site == "BS3")
psBS3 #25137 taxa and 216 samples
psBS3 = subset_samples(psnb, Site == "BS3")
psBS3
psBS3 <- prune_taxa(taxa_sums(psBS3) > 1, psBS3)
psBS3
otu_psBS2 = as(otu_table(psBS2), "matrix")
taxon_psBS2 = as(tax_table(psBS2), "matrix")
metadata_psBS2 = as(sample_data(psBS2), "matrix")
write.table(otu_psBS2,"silva_nochloronomito_otu_table_BS2.txt",sep="\t",col.names=NA)
write.table(taxon_psBS2,"silva_nochloronomito_taxa_table_BS2.txt",sep="\t",col.names=NA)
write.table(metadata_psBS2,"metadata_BS2.txt",sep="\t",col.names=NA)
# export relative abundances
psBS2_ra<-transform_sample_counts(psBS2, function(OTU) OTU/sum(OTU))
otu_psBS2_ra = as(otu_table(psBS2_ra), "matrix")
write.table(otu_psBS2_ra,"silva_nochloronomito_otu_table_psBS2_RA.txt",sep="\t",col.names=NA)
# export tables for BS3
otu_psBS3 = as(otu_table(psBS3), "matrix")
taxon_psBS3 = as(tax_table(psBS3), "matrix")
metadata_psBS3 = as(sample_data(psBS3), "matrix")
write.table(otu_psBS3,"silva_nochloronomito_otu_table_BS3.txt",sep="\t",col.names=NA)
write.table(taxon_psBS3,"silva_nochloronomito_taxa_table_BS3.txt",sep="\t",col.names=NA)
write.table(metadata_psBS3,"metadata_BS3.txt",sep="\t",col.names=NA)
# export relative abundances
psBS3_ra<-transform_sample_counts(psBS3, function(OTU) OTU/sum(OTU))
otu_psBS3_ra = as(otu_table(psBS3_ra), "matrix")
write.table(otu_psBS3_ra,"silva_nochloronomito_otu_table_psBS3_RA.txt",sep="\t",col.names=NA)
#explore BS2 data
ntaxa(psBS2) #25137
get_taxa_unique(psBS2, "Order") #446
get_taxa_unique(psBS2, "Class") #188
ps5_BS2<-filter_taxa(psBS2, function(x) mean(x) >5, TRUE)
ntaxa(ps5_BS2) #755
get_taxa_unique(ps5_BS2, "Order") #102
get_taxa_unique(ps5_BS2, "Class") #46
# Export files with low abundance taxa removed
otu_ps5_BS2 = as(otu_table(ps5_BS2), "matrix")
taxon_ps5_BS2 = as(tax_table(ps5_BS2), "matrix")
metadata_ps5_BS2 = as(sample_data(ps5_BS2), "matrix")
write.table(otu_ps5_BS2,"silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",col.names=NA)
write.table(taxon_ps5_BS2,"silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",col.names=NA)
write.table(metadata_ps5_BS2,"metadata_ps5_BS2.txt",sep="\t",col.names=NA)
# also write out ASV table with relative abundance
ps5_BS2_ra<-transform_sample_counts(ps5_BS2, function(OTU) OTU/sum(OTU))
otu_ps5_BS2_ra = as(otu_table(ps5_BS2_ra), "matrix")
write.table(otu_ps5_BS2_ra,"silva_nochloronomito_otu_table_ps5_BS2_RA.txt",sep="\t",col.names=NA)
#explore BS3 data
ntaxa(psBS3) #25137
get_taxa_unique(psBS3, "Order") #446
get_taxa_unique(psBS3, "Class") #188
ps5_BS3<-filter_taxa(psBS3, function(x) mean(x) >5, TRUE)
ntaxa(ps5_BS3)
get_taxa_unique(ps5_BS3, "Order") #43
get_taxa_unique(ps5_BS3, "Class") #17
# Export files with low abundance taxa removed
otu_ps5_BS3 = as(otu_table(ps5_BS3), "matrix")
taxon_ps5_BS3 = as(tax_table(ps5_BS3), "matrix")
metadata_ps5_BS3 = as(sample_data(ps5_BS3), "matrix")
write.table(otu_ps5_BS3,"silva_nochloronomito_otu_table_ps5_BS3.txt",sep="\t",col.names=NA)
write.table(taxon_ps5_BS3,"silva_nochloronomito_taxa_table_ps5_BS3.txt",sep="\t",col.names=NA)
write.table(metadata_ps5_BS3,"metadata_ps5_BS3.txt",sep="\t",col.names=NA)
# also write out ASV table with relative abundance
ps5_BS3_ra<-transform_sample_counts(ps5_BS3, function(OTU) OTU/sum(OTU))
otu_ps5_BS3_ra = as(otu_table(ps5_BS3_ra), "matrix")
write.table(otu_ps5_BS3_ra,"silva_nochloronomito_otu_table_ps5_BS3_RA.txt",sep="\t",col.names=NA)
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu_ps5_BS2), method="CZM", label=0)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu_ps5_BS2), method="CZM", label=0)
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
otu <- read.table("silva_nochloronomito_otu_table_ps5_BS2.txt",sep="\t",header=TRUE, row.names=1)
taxon <- read.table("silva_nochloronomito_taxa_table_ps5_BS2.txt",sep="\t",header=TRUE,row.names=1)
samples<-read.table("metadata_ps5_BS2.txt",sep="\t",header=T,row.names=1)
OTU = otu_table(otu, taxa_are_rows=FALSE)
taxon<-as.matrix(taxon)
TAX = tax_table(taxon)
sampledata = sample_data(samples)
ps5_BS2 <- phyloseq(otu_table(otu, taxa_are_rows=FALSE),
sample_data(samples),
tax_table(taxon))
ps5_BS2
# First, replace 0 values with an estimate (because normalization is taking log, can't have 0)
# Also transposing here, need samples as rows
d.czm <- cmultRepl(t(otu), method="CZM", label=0)
